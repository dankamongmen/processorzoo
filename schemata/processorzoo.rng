<grammar datatypeLibrary="http://www.w3.org/2001/XMLSchema-datatypes"
 xmlns="http://relaxng.org/ns/structure/1.0">

 <start>
	<element name="codename">
		<attribute name="name"><data type="string"/></attribute>
		<oneOrMore>
			<ref name="processor"/>
		</oneOrMore>
	</element>

 </start>

<!-- Ideally, the CPU string as reported by CPUID (though
	this is, apparently, BIOS-programmed?) or a SKU name. -->
<define name="processor">
<element name="processor">
	<attribute name="name"><data type="string"/></attribute>
	<interleave>

<!-- Codenames can span products, and products can span codenames. For an
     example, see Bloomfield, which is both a Core i7 Extreme and a Core i7.
     Meanwhile, Core i7 Nehalem spans Bloomfield and Lynnfield. -->

	<optional><element name="product"><text/></element></optional>
	<oneOrMore>
		<ref name="core"/>
	</oneOrMore>

<!-- In Hz, as specified on the processor datasheet, with neither underclocking
     nor overclocking nor TurboBoost etc. turned on. -->

	<optional>
		<element name="basehz"><data type="float"/></element>
	</optional>

<!-- For multicores, caches/TLBs accessible by only a subset of cores belong in
     the respective uarch object. -->
	<zeroOrMore>
		<externalRef href="tlb.rng"/>
	</zeroOrMore>
	<zeroOrMore>
		<externalRef href="cache.rng"/>
	</zeroOrMore>
	<zeroOrMore>
		<externalRef href="bus.rng"/>
	</zeroOrMore>

<!-- PHYSICAL DATA -->

	<optional> <!-- In watts, as specified on the processor datasheet. -->
		<element name="tdp"><data type="float"/></element>
	</optional>

	<optional>
		<element name="die"> <!-- area is in mm^2 -->
			<interleave>
			<optional>
				<attribute name="socket"><data type="string"/></attribute>
			</optional>
			<zeroOrMore>
				<choice>
				<!-- Expressed in mm^2 as base unit -->
				<element name="area"><data type="float"/></element>

				<element name="transistors"><data type="float"/></element>

				<!-- Expressed in nanometers as base unit -->
				<element name="process"><data type="float"/></element>

				<element name="tech"><data type="string"/></element>
				<element name="volts"><data type="float"/></element>
				<element name="package"><data type="string"/></element>
				</choice>
			</zeroOrMore>
			</interleave>
		</element>
	</optional>
	</interleave>

</element>
</define>

 <include href="../generated/uarches.rng"/>

 <define name="core">
  <element name="core">
   <attribute name="uarch">
    <ref name="uarches"/>
   </attribute>
   <interleave>
    <optional>
     <element name="x">
      <data type="integer"/>
     </element>
    </optional>
   </interleave>
  </element>
 </define>

 <define name="uarch">
	<externalRef href="uarch.rng"/>
 </define>

</grammar>
